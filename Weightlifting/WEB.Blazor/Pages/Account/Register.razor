@page "/Account/Register"
@inject IAccountService _accountService;

<PageTitle>Register</PageTitle>

@if (!succeeded)
{
    <p>Please enter your details below.</p>

    <EditForm Model="@userRegistrationDTO" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="FirstName" class="form-label">First name</label>
            <InputText class="form-control" id="FirstName" @bind-Value="userRegistrationDTO.FirstName" placeholder="First name" />
        </div>

        <div class="mb-3">
            <label for="Email" class="form-label">Email</label>
            <InputText class="form-control" id="Email" @bind-Value="userRegistrationDTO.Email" placeholder="Email" />
        </div>

        <div class="mb-3">
            <label for="Password" class="form-label">Password</label>
            <InputText class="form-control" id="Password" @bind-Value="userRegistrationDTO.Password" placeholder="Password" />
        </div>

        <div class="mb-3">
            <label for="ConfirmPassword" class="form-label">Confirm password</label>
            <InputText class="form-control" id="ConfirmPassword" @bind-Value="userRegistrationDTO.ConfirmPassword" placeholder="Confirm password" />
        </div>

        <div class="mb-3">
            <label for="AccountType">Account Type</label>
            <br />
            <InputRadioGroup class="form-check-input" id="AccountType" @bind-Value="@IsCoach">
                <InputRadio Value="@true" />Coach<br>
                <InputRadio Value="@false" />Athlete<br>
            </InputRadioGroup>
        </div>

        <button class="btn btn-primary" type="submit">Submit</button>

    </EditForm>
}
else
{
    <p>
        Registration successful! <a href="/Account/Login">Click here to login</a>.
    </p>
}


@code {
    private UserRegistrationDTO userRegistrationDTO = new();
    private bool IsCoach = false;

    private bool registering;
    private bool succeeded;

    private async Task HandleValidSubmit()
    {
        registering = true;

        var result = IsCoach ?
            await _accountService.RegisterCoach(userRegistrationDTO) :
            await _accountService.RegisterAthlete(userRegistrationDTO);

        if (result.Success)
        {
            succeeded = true;
        }

        registering = false;
    }
}